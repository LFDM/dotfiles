""""""""""""
"  Leader  "
""""""""""""
let mapleader = ';'


""""""""""""""""""""""""""
"  Disabled janus stuff  "
""""""""""""""""""""""""""

function! s:disable_plugins(plugins)
  for plugin in a:plugins
    call janus#disable_plugin(plugin)
  endfor
endfunction
"
" pulled new version of easymotion as vim-easymotion
let s:always_to_disable = [
      \  'snipmate-snippets',
      \  'vimwiki',
      \  'snipmate',
      \  'supertab',
      \  'easymotion',
      \  'buffergator',
      \  'dispatch',
      \  'eunuch',
      \  'narrowregion',
      \  'vroom',
      \  'vim-latex',
      \  'vim-ruby-refactoring'
      \]

call s:disable_plugins(s:always_to_disable)
"call janus#disable_plugin('YouCompleteMe')

if $MINVIM
  " Use this for a minimal setup which loads much fast (=> instantly is the
  " goal!
  let s:min_vim_disable = [
        \  'vim-startify',
        \  'ctrlp',
        \  'ctrlp_custom_modes',
        \  'sideways.vim',
        \  'splitjoin.vim',
        \  'tern_for_vim',
        \  'vim-clojure-static',
        \  'vim-fireplace',
        \  'Ultisnips',
        \  'syntastic'
        \]
  call s:disable_plugins(s:min_vim_disable)
endif

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"                        Upfront Keybindings                              "
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"""""""""""""""
"  vim-latex  "
"""""""""""""""

" the default <c-j> collides with UltiSnips
imap <C-g> <Plug>IMAP_JumpForward
nmap <C-g> <Plug>IMAP_JumpForward
vmap <C-g> <Plug>IMAP_JumpForward


"""""""""""""
"  Airline  "
"""""""""""""

let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#show_buffers = 1
let g:airline_powerline_fonts = 1
let g:airline_theme = 'lfdm'


"""""""""""""""
"  UltiSnips  "
"""""""""""""""

let g:UltiSnipsExpandTrigger = "<c-j>"
let g:UltiSnipsListSnippets = "<c-e>"


"""""""""""""""""""
"  YouCompleteMe  "
"""""""""""""""""""

let g:ycm_semantic_completion_toggle = '<c-f>'


""""""""""""""
"  yankring  "
""""""""""""""

let g:yankring_replace_n_pkey = ',p'
let g:yankring_replace_n_nkey = ',n'
" not sure what this is good for - it works without them
" and it breaks easymotion in operator pending mode
let g:yankring_zap_keys = ''


""""""""""""""""
"  IndentLine  "
""""""""""""""""

let g:indentLine_noConcealCursor = 1


""""""""""""""""
"  vim-hopper  "
""""""""""""""""

let g:hopper_prefix = '<space>'
let g:hopper_file_opener = [ 'angular' ]

""""""""""""""""
"  vim-lookup  "
""""""""""""""""

let angular_pattern = '\v.(js|less|spec.coffee|tpl.html)$'

let g:lookup_file_mappings = {
  \'js': [
    \ {
    \   'pattern': angular_pattern,
    \   'substitute': [angular_pattern, '.js']
    \ }
  \],
  \'spec': [
    \ {
    \   'pattern': angular_pattern,
    \   'substitute': [angular_pattern, '.spec.coffee']
    \ }
  \],
  \'tpl': [
    \ {
    \   'pattern': angular_pattern,
    \   'substitute': [angular_pattern, '-tpl.html']
    \ }
  \],
  \'less': [
    \ {
    \   'pattern': angular_pattern,
    \   'substitute': [angular_pattern, '.less']
    \ }
  \]
\}

let g:lookup_layouts = {
  \'angular' : [
    \{
      \'pattern' : 'directive' . angular_pattern,
      \'windows' : [
      \  [
      \    { 'substitute': [angular_pattern, '.js'] },
      \    { 'substitute': [angular_pattern, '-tpl.html'] }
      \  ],
      \  [
      \    { 'substitute': [angular_pattern, '.spec.coffee'], 'rows': 18 },
      \    { 'substitute': [angular_pattern, '.less'] },
      \    { 'substitute': [angular_pattern, '.less'], 'rows': 18 }
      \  ]
      \]
    \},
    \{
      \'pattern' : '\v(service|factory|controller)' . angular_pattern,
      \'windows' : [
      \  [
      \    { 'substitute': [angular_pattern, '.js'] },
      \    { 'substitute': [angular_pattern, '.spec.coffee'] }
      \  ]
      \]
    \}
  \]
\}


""""""""""""""""""
"  numbertoggle  "
""""""""""""""""""

" this basically says: we don't want to use you
let g:NumberToggleTrigger = '<Plug>UndefinedOfNoMansLand'


"""""""""""""""
"  emmet-vim  "
"""""""""""""""

let g:user_emmet_leader_key = ','

""""""""""""""""
"  localvimrc  "
""""""""""""""""

let g:localvimrc_whitelist=$HOME."/code/.*"
